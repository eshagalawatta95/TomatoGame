@model TomatoGame.Web.Models.UserSignInSignUpViewModal
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title> Tomato Game </title>

    <!-- CSS -->
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>

    <link href="~/Content/Site.css" rel="stylesheet" />
    <!-- Boxicons CSS -->
    <link href='https://unpkg.com/boxicons@2.1.2/css/boxicons.min.css' rel='stylesheet'>

</head>
<body>

    <section class="container forms">
        <div class="form login">
            <div class="form-content">
                <header>Login</header>
                <form id="loginForm">
                    <div class="field input-field">
                        @Html.TextBoxFor(m => m.Email, new { @placeholder = "Email", @class = "form-control" })
                    </div>

                    <div class="field input-field">
                        @Html.PasswordFor(m => m.Password, new { @placeholder = "Password", @class = "form-control" })
                    </div>

                    <div class="field button-field">
                        <button type="submit">Login</button>
                    </div>
                  
                  </form>

                    <div class="form-link">
                        <span>Don't have an account? <a href="#" class="link signup-link">Signup</a></span>
                    </div>
            </div>

            <div class="line"></div>
            @using (Html.BeginForm("Login", "Google", FormMethod.Post))
            {

                <div class="media-options">
                    <button type="submit"> Login with Google</button>
                </div>
            }

        </div>

        <!-- Signup Form -->

        <div class="form signup">
            <div class="form-content">
                <header>Signup</header>
                <form id="signupForm">
                    <div class="field input-field">
                        @Html.TextBoxFor(m => m.Email, new { @placeholder = "Email", @class = "form-control" })
                    </div>

                    <div class="field input-field">
                        @Html.PasswordFor(m => m.Name, new { @placeholder = "Name", @class = "form-control" })
                    </div>

                    <div class="field input-field">
                        @Html.PasswordFor(m => m.Password, new { @placeholder = "Password", @class = "form-control" })
                        <i class='bx bx-hide eye-icon'></i>
                    </div>
                    <div class="field input-field">
                        @Html.PasswordFor(m => m.ConfirmPassword, new { @placeholder = "Confirm Password", @class = "form-control" })
                        <i class='bx bx-hide eye-icon'></i>
                    </div>
                    <div class="field button-field">
                        <button type="submit">Signup</button>
                    </div>
                </form>

                <div class="form-link">
                    <span>Already have an account? <a href="#" class="link login-link">Login</a></span>
                </div>
            </div>

            <div class="line"></div>



            <div class="media-options">
                <a href="#" class="field google">
                    <i class='bx bxl-google google-icon'></i>
                    <span>Login with Google</span>
                </a>
            </div>

        </div>
    </section>

    <!-- JavaScript -->
    <script src="~/Scripts/Site.js"></script>
    @section Scripts {
        @Scripts.Render("~/bundles/jquery")
        @Scripts.Render("~/bundles/jqueryval")
    }

<script>
     $(document).ready(function () {
    // AJAX login form submission
    $('#loginForm').submit(function (event) {
        event.preventDefault(); // Prevent default form submission
        var formData = $(this).serialize(); // Serialize form data

        $.ajax({
            url: '@Url.Action("LoginAsync", "Home")', 
            type: 'POST',
            data: formData,
            success: function (response) {
                if (response == true) {
                    window.location.href = '/Game/Index';
                }
                else {
                    alert('Username or password do not match. Please try again.');
                }
            },
            error: function (xhr, status, error) {
                // Handle error response
                console.error('Login error:', error);
            }
        });
    });

    // AJAX signup form submission
    $('#signupForm').submit(function (event) {
        event.preventDefault(); // Prevent default form submission
        var password = $('#Password').val();
        var confirmPassword = $('#ConfirmPassword').val();

        if (password !== confirmPassword) {
            event.preventDefault(); // Stop form from submitting
            alert('Passwords do not match. Please try again.');
            return;
        }

        var formData = $(this).serialize(); // Serialize form data

        $.ajax({
            url: '@Url.Action("SignUpAsync", "Home")',
            type: 'POST',
            data: formData,
            success: function (response) {
                if (response == true) {
                    window.location.href = '/Game/Index';
                }
                else {
                    alert('Something is wrong. Please try again.');
                }
            },
            error: function (xhr, status, error) {
                // Handle error response
                console.error('Signup error:', error);
            }
        });
    });
});

</script>

</body>
</html>